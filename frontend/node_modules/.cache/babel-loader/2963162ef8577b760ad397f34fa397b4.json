{"ast":null,"code":"import { CATEGORY_LIST_REQUEST, CATEGORY_LIST_SUCCESS, CATEGORY_LIST_FAIL, CATEGORY_DETAILS_REQUEST, CATEGORY_DETAILS_SUCCESS, CATEGORY_DETAILS_FAIL, CATEGORY_SAVE_REQUEST, CATEGORY_SAVE_SUCCESS, CATEGORY_SAVE_FAIL, CATEGORY_DELETE_SUCCESS, CATEGORY_DELETE_FAIL, CATEGORY_DELETE_REQUEST } from '../constants/categoryConstants';\nimport axios from 'axios';\nimport Axios from 'axios';\n\nconst listCategory = (category = '') => async dispatch => {\n  try {\n    dispatch({\n      type: CATEGORY_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/category');\n    dispatch({\n      type: CATEGORY_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveCategory = category => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CATEGORY_SAVE_REQUEST,\n      payload: category\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n\n    if (!category._id) {\n      const {\n        data\n      } = await Axios.post('/api/category', category, {\n        headers: {\n          Authorization: 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: CATEGORY_SAVE_SUCCESS,\n        payload: data\n      });\n    } else {\n      const {\n        data\n      } = await Axios.put('/api/category/' + category._id, category, {\n        headers: {\n          Authorization: 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: CATEGORY_SAVE_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsCategory = categoryId => async dispatch => {\n  try {\n    dispatch({\n      type: CATEGORY_DETAILS_REQUEST,\n      payload: categoryId\n    });\n    const {\n      data\n    } = await axios.get('/api/category/' + categoryId);\n    dispatch({\n      type: CATEGORY_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst deleteCategory = categoryId => async (dispatch, getState) => {\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    dispatch({\n      type: CATEGORY_DELETE_REQUEST,\n      payload: categoryId\n    });\n    const {\n      data\n    } = await axios.delete('/api/category/' + categoryId, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: CATEGORY_DELETE_SUCCESS,\n      payload: data,\n      success: true\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listCategory, detailsCategory, saveCategory, deleteCategory };","map":{"version":3,"sources":["F:/Work/innobytes/local Repo/NonVegMart/frontend/src/actions/categoryActions.js"],"names":["CATEGORY_LIST_REQUEST","CATEGORY_LIST_SUCCESS","CATEGORY_LIST_FAIL","CATEGORY_DETAILS_REQUEST","CATEGORY_DETAILS_SUCCESS","CATEGORY_DETAILS_FAIL","CATEGORY_SAVE_REQUEST","CATEGORY_SAVE_SUCCESS","CATEGORY_SAVE_FAIL","CATEGORY_DELETE_SUCCESS","CATEGORY_DELETE_FAIL","CATEGORY_DELETE_REQUEST","axios","Axios","listCategory","category","dispatch","type","data","get","payload","error","message","saveCategory","getState","userSignin","userInfo","_id","post","headers","Authorization","token","put","detailsCategory","categoryId","deleteCategory","delete","success"],"mappings":"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","sourcesContent":["import {\r\n  CATEGORY_LIST_REQUEST,\r\n  CATEGORY_LIST_SUCCESS,\r\n  CATEGORY_LIST_FAIL,\r\n  CATEGORY_DETAILS_REQUEST,\r\n  CATEGORY_DETAILS_SUCCESS,\r\n  CATEGORY_DETAILS_FAIL,\r\n  CATEGORY_SAVE_REQUEST,\r\n  CATEGORY_SAVE_SUCCESS,\r\n  CATEGORY_SAVE_FAIL,\r\n  CATEGORY_DELETE_SUCCESS,\r\n  CATEGORY_DELETE_FAIL,\r\n  CATEGORY_DELETE_REQUEST,\r\n} from '../constants/categoryConstants';\r\n\r\nimport axios from 'axios';\r\nimport Axios from 'axios';\r\n\r\nconst listCategory = (category = '') => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CATEGORY_LIST_REQUEST });\r\n    const { data } = await axios.get('/api/category');\r\n    dispatch({ type: CATEGORY_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: CATEGORY_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst saveCategory = (category) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: CATEGORY_SAVE_REQUEST, payload: category });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    if (!category._id) {\r\n      const { data } = await Axios.post('/api/category', category, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + userInfo.token,\r\n        },\r\n      });\r\n      dispatch({ type: CATEGORY_SAVE_SUCCESS, payload: data });\r\n    } else {\r\n      const { data } = await Axios.put(\r\n        '/api/category/' + category._id,\r\n        category,\r\n        {\r\n          headers: {\r\n            Authorization: 'Bearer ' + userInfo.token,\r\n          },\r\n        }\r\n      );\r\n      dispatch({ type: CATEGORY_SAVE_SUCCESS, payload: data });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: CATEGORY_SAVE_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst detailsCategory = (categoryId) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CATEGORY_DETAILS_REQUEST, payload: categoryId });\r\n    const { data } = await axios.get('/api/category/' + categoryId);\r\n    dispatch({ type: CATEGORY_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: CATEGORY_DETAILS_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst deleteCategory = (categoryId) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    dispatch({ type: CATEGORY_DELETE_REQUEST, payload: categoryId });\r\n    const { data } = await axios.delete('/api/category/' + categoryId, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + userInfo.token,\r\n      },\r\n    });\r\n    dispatch({ type: CATEGORY_DELETE_SUCCESS, payload: data, success: true });\r\n  } catch (error) {\r\n    dispatch({ type: CATEGORY_DELETE_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nexport { listCategory, detailsCategory, saveCategory, deleteCategory };\r\n"]},"metadata":{},"sourceType":"module"}