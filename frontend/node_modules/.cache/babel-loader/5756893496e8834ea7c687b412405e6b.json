{"ast":null,"code":"import { SELLER_PRODUCT_LIST_REQUEST, SELLER_PRODUCT_LIST_SUCCESS, SELLER_PRODUCT_LIST_FAIL, SELLER_PRODUCT_DETAILS_REQUEST, SELLER_PRODUCT_DETAILS_SUCCESS, SELLER_PRODUCT_DETAILS_FAIL, SELLER_PRODUCT_SAVE_REQUEST, SELLER_PRODUCT_SAVE_SUCCESS, SELLER_PRODUCT_SAVE_FAIL, SELLER_PRODUCT_DELETE_SUCCESS, SELLER_PRODUCT_DELETE_FAIL, SELLER_PRODUCT_DELETE_REQUEST } from \"../constants/sellerproductConstant\";\nimport axios from 'axios';\nimport Axios from \"axios\";\n\nconst listCategory = () => async dispatch => {\n  try {\n    dispatch({\n      type: CATEGORY_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/categories');\n    dispatch({\n      type: CATEGORY_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst sellerlistProducts = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: SELLER_PRODUCT_LIST_REQUEST\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    console.log(userInfo);\n    const {\n      data\n    } = await axios.get(\"/sellerproduct/\" + category + \"&searchKeyword=\" + searchKeyword + \"&sortOrder=\" + sortOrder);\n    dispatch({\n      type: SELLER_PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SELLER_PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst sellersaveProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: SELLER_PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n\n    if (!product._id) {\n      const {\n        data\n      } = await Axios.post('/api/sellerproducts', product, {\n        headers: {\n          'Authorization': 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: SELLER_PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    } else {\n      const {\n        data\n      } = await Axios.put('/api/sellerproducts/' + product._id, product, {\n        headers: {\n          'Authorization': 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: SELLER_PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: SELLER_PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst sellerdetailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: SELLER_PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get(\"/api/sellerproducts/\" + productId);\n    dispatch({\n      type: SELLER_PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SELLER_PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst sellerdeleteProdcut = productId => async (dispatch, getState) => {\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    dispatch({\n      type: SELLER_PRODUCT_DELETE_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.delete(\"/api/sellerproducts/\" + productId, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: SELLER_PRODUCT_DELETE_SUCCESS,\n      payload: data,\n      success: true\n    });\n  } catch (error) {\n    dispatch({\n      type: SELLER_PRODUCT_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { sellerlistProducts, sellerdetailsProduct, sellersaveProduct, sellerdeleteProdcut };","map":{"version":3,"sources":["E:/NVM/NonVegMart/frontend/src/actions/sellerProductActions.js"],"names":["SELLER_PRODUCT_LIST_REQUEST","SELLER_PRODUCT_LIST_SUCCESS","SELLER_PRODUCT_LIST_FAIL","SELLER_PRODUCT_DETAILS_REQUEST","SELLER_PRODUCT_DETAILS_SUCCESS","SELLER_PRODUCT_DETAILS_FAIL","SELLER_PRODUCT_SAVE_REQUEST","SELLER_PRODUCT_SAVE_SUCCESS","SELLER_PRODUCT_SAVE_FAIL","SELLER_PRODUCT_DELETE_SUCCESS","SELLER_PRODUCT_DELETE_FAIL","SELLER_PRODUCT_DELETE_REQUEST","axios","Axios","listCategory","dispatch","type","CATEGORY_LIST_REQUEST","data","get","CATEGORY_LIST_SUCCESS","payload","error","CATEGORY_LIST_FAIL","message","sellerlistProducts","getState","userSignin","userInfo","console","log","category","searchKeyword","sortOrder","sellersaveProduct","product","_id","post","headers","token","put","sellerdetailsProduct","productId","sellerdeleteProdcut","delete","Authorization","success"],"mappings":"AAAA,SACEA,2BADF,EAEEC,2BAFF,EAGEC,wBAHF,EAIEC,8BAJF,EAKEC,8BALF,EAMEC,2BANF,EAOEC,2BAPF,EAQEC,2BARF,EASEC,wBATF,EAUEC,6BAVF,EAWEC,0BAXF,EAYEC,6BAZF,QAaO,oCAbP;AAcA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC7C,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEC;AAAR,KAAD,CAAR;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMN,KAAK,CAACO,GAAN,CAAU,iBAAV,CAAvB;AACAJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEI,qBAAR;AAA+BC,MAAAA,OAAO,EAAEH;AAAxC,KAAD,CAAR;AACD,GAJD,CAIE,OAAOI,KAAP,EAAc;AACdP,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEO,kBAAR;AAA4BF,MAAAA,OAAO,EAAEC,KAAK,CAACE;AAA3C,KAAD,CAAR;AACD;AACF,CARD;;AASA,MAAMC,kBAAkB,GAAG,MAAM,OAAOV,QAAP,EAAkBW,QAAlB,KAA+B;AAC9D,MAAI;AAEFX,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEhB;AADC,KAAD,CAAR;AAGA,UAAM;AACJ2B,MAAAA,UAAU,EAAE;AACVC,QAAAA;AADU;AADR,QAIFF,QAAQ,EAJZ;AAKAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,UAAM;AACJV,MAAAA;AADI,QAEF,MAAMN,KAAK,CAACO,GAAN,CAAU,oBAAoBY,QAApB,GAClB,iBADkB,GACEC,aADF,GACkB,aADlB,GACkCC,SAD5C,CAFV;AAIAlB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEf,2BADC;AAEPoB,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GAnBD,CAmBE,OAAOI,KAAP,EAAc;AAEdP,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEd,wBADC;AAEPmB,MAAAA,OAAO,EAAEC,KAAK,CAACE;AAFR,KAAD,CAAR;AAID;AACF,CA3BD;;AA6BA,MAAMU,iBAAiB,GAAIC,OAAD,IAAa,OAAOpB,QAAP,EAAiBW,QAAjB,KAA8B;AACnE,MAAI;AACFX,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEV,2BADC;AAEPe,MAAAA,OAAO,EAAEc;AAFF,KAAD,CAAR;AAIA,UAAM;AACJR,MAAAA,UAAU,EAAE;AACVC,QAAAA;AADU;AADR,QAIFF,QAAQ,EAJZ;;AAKA,QAAI,CAACS,OAAO,CAACC,GAAb,EAAkB;AAChB,YAAM;AACJlB,QAAAA;AADI,UAEF,MAAML,KAAK,CAACwB,IAAN,CAAW,qBAAX,EAAkCF,OAAlC,EAA2C;AACnDG,QAAAA,OAAO,EAAE;AACP,2BAAiB,YAAYV,QAAQ,CAACW;AAD/B;AAD0C,OAA3C,CAFV;AAOAxB,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAET,2BADC;AAEPc,QAAAA,OAAO,EAAEH;AAFF,OAAD,CAAR;AAID,KAZD,MAYO;AACL,YAAM;AACJA,QAAAA;AADI,UAEF,MAAML,KAAK,CAAC2B,GAAN,CAAU,yBAAyBL,OAAO,CAACC,GAA3C,EAAgDD,OAAhD,EAAyD;AACjEG,QAAAA,OAAO,EAAE;AACP,2BAAiB,YAAYV,QAAQ,CAACW;AAD/B;AADwD,OAAzD,CAFV;AAOAxB,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAET,2BADC;AAEPc,QAAAA,OAAO,EAAEH;AAFF,OAAD,CAAR;AAID;AAEF,GApCD,CAoCE,OAAOI,KAAP,EAAc;AAEdP,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAER,wBADC;AAEPa,MAAAA,OAAO,EAAEC,KAAK,CAACE;AAFR,KAAD,CAAR;AAID;AACF,CA5CD;;AA8CA,MAAMiB,oBAAoB,GAAIC,SAAD,IAAe,MAAO3B,QAAP,IAAoB;AAC9D,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEb,8BADC;AAEPkB,MAAAA,OAAO,EAAEqB;AAFF,KAAD,CAAR;AAIA,UAAM;AACJxB,MAAAA;AADI,QAEF,MAAMN,KAAK,CAACO,GAAN,CAAU,yBAAyBuB,SAAnC,CAFV;AAGA3B,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEZ,8BADC;AAEPiB,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GAZD,CAYE,OAAOI,KAAP,EAAc;AACdP,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEX,2BADC;AAEPgB,MAAAA,OAAO,EAAEC,KAAK,CAACE;AAFR,KAAD,CAAR;AAKD;AACF,CApBD;;AAsBA,MAAMmB,mBAAmB,GAAID,SAAD,IAAe,OAAO3B,QAAP,EAAiBW,QAAjB,KAA8B;AACvE,MAAI;AACF,UAAM;AACJC,MAAAA,UAAU,EAAE;AACVC,QAAAA;AADU;AADR,QAIFF,QAAQ,EAJZ;AAKAX,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,6BADC;AAEPU,MAAAA,OAAO,EAAEqB;AAFF,KAAD,CAAR;AAIA,UAAM;AACJxB,MAAAA;AADI,QAEF,MAAMN,KAAK,CAACgC,MAAN,CAAa,yBAAyBF,SAAtC,EAAiD;AACzDJ,MAAAA,OAAO,EAAE;AACPO,QAAAA,aAAa,EAAE,YAAYjB,QAAQ,CAACW;AAD7B;AADgD,KAAjD,CAFV;AAOAxB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP,6BADC;AAEPY,MAAAA,OAAO,EAAEH,IAFF;AAGP4B,MAAAA,OAAO,EAAE;AAHF,KAAD,CAAR;AAKD,GAtBD,CAsBE,OAAOxB,KAAP,EAAc;AACdP,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,0BADC;AAEPW,MAAAA,OAAO,EAAEC,KAAK,CAACE;AAFR,KAAD,CAAR;AAKD;AACF,CA9BD;;AAgCA,SACEC,kBADF,EAEEgB,oBAFF,EAGEP,iBAHF,EAIES,mBAJF","sourcesContent":["import {\r\n  SELLER_PRODUCT_LIST_REQUEST,\r\n  SELLER_PRODUCT_LIST_SUCCESS,\r\n  SELLER_PRODUCT_LIST_FAIL,\r\n  SELLER_PRODUCT_DETAILS_REQUEST,\r\n  SELLER_PRODUCT_DETAILS_SUCCESS,\r\n  SELLER_PRODUCT_DETAILS_FAIL,\r\n  SELLER_PRODUCT_SAVE_REQUEST,\r\n  SELLER_PRODUCT_SAVE_SUCCESS,\r\n  SELLER_PRODUCT_SAVE_FAIL,\r\n  SELLER_PRODUCT_DELETE_SUCCESS,\r\n  SELLER_PRODUCT_DELETE_FAIL,\r\n  SELLER_PRODUCT_DELETE_REQUEST\r\n} from \"../constants/sellerproductConstant\"\r\nimport axios from 'axios';\r\nimport Axios from \"axios\";\r\n\r\nconst listCategory = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CATEGORY_LIST_REQUEST });\r\n    const { data } = await axios.get('/api/categories');\r\n    dispatch({ type: CATEGORY_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: CATEGORY_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\nconst sellerlistProducts = () => async (dispatch , getState) => {\r\n  try {\r\n\r\n    dispatch({\r\n      type: SELLER_PRODUCT_LIST_REQUEST\r\n    });\r\n    const {\r\n      userSignin: {\r\n        userInfo\r\n      }\r\n    } = getState();\r\n    console.log(userInfo);\r\n    const {\r\n      data\r\n    } = await axios.get(\"/sellerproduct/\" + category +\r\n      \"&searchKeyword=\" + searchKeyword + \"&sortOrder=\" + sortOrder);\r\n    dispatch({\r\n      type: SELLER_PRODUCT_LIST_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n\r\n    dispatch({\r\n      type: SELLER_PRODUCT_LIST_FAIL,\r\n      payload: error.message\r\n    });\r\n  }\r\n}\r\n\r\nconst sellersaveProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: SELLER_PRODUCT_SAVE_REQUEST,\r\n      payload: product\r\n    });\r\n    const {\r\n      userSignin: {\r\n        userInfo\r\n      }\r\n    } = getState();\r\n    if (!product._id) {\r\n      const {\r\n        data\r\n      } = await Axios.post('/api/sellerproducts', product, {\r\n        headers: {\r\n          'Authorization': 'Bearer ' + userInfo.token\r\n        }\r\n      });\r\n      dispatch({\r\n        type: SELLER_PRODUCT_SAVE_SUCCESS,\r\n        payload: data\r\n      });\r\n    } else {\r\n      const {\r\n        data\r\n      } = await Axios.put('/api/sellerproducts/' + product._id, product, {\r\n        headers: {\r\n          'Authorization': 'Bearer ' + userInfo.token\r\n        }\r\n      });\r\n      dispatch({\r\n        type: SELLER_PRODUCT_SAVE_SUCCESS,\r\n        payload: data\r\n      });\r\n    }\r\n\r\n  } catch (error) {\r\n\r\n    dispatch({\r\n      type: SELLER_PRODUCT_SAVE_FAIL,\r\n      payload: error.message\r\n    });\r\n  }\r\n}\r\n\r\nconst sellerdetailsProduct = (productId) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: SELLER_PRODUCT_DETAILS_REQUEST,\r\n      payload: productId\r\n    });\r\n    const {\r\n      data\r\n    } = await axios.get(\"/api/sellerproducts/\" + productId);\r\n    dispatch({\r\n      type: SELLER_PRODUCT_DETAILS_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: SELLER_PRODUCT_DETAILS_FAIL,\r\n      payload: error.message\r\n    });\r\n\r\n  }\r\n}\r\n\r\nconst sellerdeleteProdcut = (productId) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      userSignin: {\r\n        userInfo\r\n      }\r\n    } = getState();\r\n    dispatch({\r\n      type: SELLER_PRODUCT_DELETE_REQUEST,\r\n      payload: productId\r\n    });\r\n    const {\r\n      data\r\n    } = await axios.delete(\"/api/sellerproducts/\" + productId, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + userInfo.token\r\n      }\r\n    });\r\n    dispatch({\r\n      type: SELLER_PRODUCT_DELETE_SUCCESS,\r\n      payload: data,\r\n      success: true\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: SELLER_PRODUCT_DELETE_FAIL,\r\n      payload: error.message\r\n    });\r\n\r\n  }\r\n}\r\n\r\nexport {\r\n  sellerlistProducts,\r\n  sellerdetailsProduct,\r\n  sellersaveProduct,\r\n  sellerdeleteProdcut\r\n}"]},"metadata":{},"sourceType":"module"}