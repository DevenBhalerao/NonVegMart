{"ast":null,"code":"import { CATEGORY_LIST_REQUEST, CATEGORY_LIST_SUCCESS, CATEGORY_LIST_FAIL, CATEGORY_DETAILS_REQUEST, CATEGORY_DETAILS_SUCCESS, CATEGORY_DETAILS_FAIL, CATEGORY_SAVE_REQUEST, CATEGORY_SAVE_SUCCESS, CATEGORY_SAVE_FAIL, CATEGORY_DELETE_SUCCESS, CATEGORY_DELETE_FAIL, CATEGORY_DELETE_REQUEST } from \"../constants/categoryConstants\";\nimport axios from 'axios';\nimport Axios from \"axios\";\n\nconst listCategory = (category = '', searchKeyword = '', sortOrder = '') => async dispatch => {\n  try {\n    dispatch({\n      type: CATEGORY_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/category=\" + category + \"&searchKeyword=\" + searchKeyword);\n    dispatch({\n      type: CATEGORY_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveCategory = category => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CATEGORY_SAVE_REQUEST,\n      payload: category\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n\n    if (!category._id) {\n      const {\n        data\n      } = await Axios.post('/api/category', category, {\n        headers: {\n          'Authorization': 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: CATEGORY_SAVE_SUCCESS,\n        payload: data\n      });\n    } else {\n      const {\n        data\n      } = await Axios.put('/api/category/' + category._id, category, {\n        headers: {\n          'Authorization': 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: CATEGORY_SAVE_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsCategory = categoryId => async dispatch => {\n  try {\n    dispatch({\n      type: CATEGORY_DETAILS_REQUEST,\n      payload: categoryId\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products/\" + categoryId);\n    dispatch({\n      type: CATEGORY_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst deleteCategory = categoryId => async (dispatch, getState) => {\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    dispatch({\n      type: CATEGORY_DELETE_REQUEST,\n      payload: categoryId\n    });\n    const {\n      data\n    } = await axios.delete(\"/api/category/\" + categoryId, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: CATEGORY_DELETE_SUCCESS,\n      payload: data,\n      success: true\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listCategory, detailsCategory, saveCategory, deleteCategory };","map":{"version":3,"sources":["C:/nonvegmart/frontend/src/actions/categoryActions.js"],"names":["CATEGORY_LIST_REQUEST","CATEGORY_LIST_SUCCESS","CATEGORY_LIST_FAIL","CATEGORY_DETAILS_REQUEST","CATEGORY_DETAILS_SUCCESS","CATEGORY_DETAILS_FAIL","CATEGORY_SAVE_REQUEST","CATEGORY_SAVE_SUCCESS","CATEGORY_SAVE_FAIL","CATEGORY_DELETE_SUCCESS","CATEGORY_DELETE_FAIL","CATEGORY_DELETE_REQUEST","axios","Axios","listCategory","category","searchKeyword","sortOrder","dispatch","type","data","get","payload","error","message","saveCategory","getState","userSignin","userInfo","_id","post","headers","token","put","detailsCategory","categoryId","deleteCategory","delete","Authorization","success"],"mappings":"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","sourcesContent":["import {\r\n  CATEGORY_LIST_REQUEST, CATEGORY_LIST_SUCCESS, CATEGORY_LIST_FAIL,\r\n  CATEGORY_DETAILS_REQUEST, CATEGORY_DETAILS_SUCCESS, CATEGORY_DETAILS_FAIL, CATEGORY_SAVE_REQUEST, CATEGORY_SAVE_SUCCESS, CATEGORY_SAVE_FAIL, CATEGORY_DELETE_SUCCESS, CATEGORY_DELETE_FAIL, CATEGORY_DELETE_REQUEST\r\n} from \"../constants/categoryConstants\"\r\nimport axios from 'axios';\r\nimport Axios from \"axios\";\r\n\r\nconst listCategory = (category = '', searchKeyword = '', sortOrder = '') => async (dispatch) => {\r\n  try {\r\n\r\n    dispatch({ type: CATEGORY_LIST_REQUEST });\r\n    const { data } = await axios.get(\"/api/category=\" + category +\r\n      \"&searchKeyword=\" + searchKeyword );\r\n    dispatch({ type: CATEGORY_LIST_SUCCESS, payload: data });\r\n  }\r\n  catch (error) {\r\n\r\n    dispatch({ type: CATEGORY_LIST_FAIL, payload: error.message });\r\n  }\r\n}\r\n\r\nconst saveCategory = (category) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: CATEGORY_SAVE_REQUEST, payload: category });\r\n    const { userSignin: { userInfo } } = getState();\r\n    if (!category._id) {\r\n      const { data } = await Axios.post('/api/category', category, {\r\n        headers: {\r\n          'Authorization': 'Bearer ' + userInfo.token\r\n        }\r\n      });\r\n      dispatch({ type: CATEGORY_SAVE_SUCCESS, payload: data });\r\n    } else {\r\n      const { data } = await Axios.put('/api/category/' + category._id, category, {\r\n        headers: {\r\n          'Authorization': 'Bearer ' + userInfo.token\r\n        }\r\n      });\r\n      dispatch({ type: CATEGORY_SAVE_SUCCESS, payload: data });\r\n    }\r\n\r\n  } catch (error) {\r\n\r\n    dispatch({ type: CATEGORY_SAVE_FAIL, payload: error.message });\r\n  }\r\n}\r\n\r\nconst detailsCategory = (categoryId) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CATEGORY_DETAILS_REQUEST, payload: categoryId });\r\n    const { data } = await axios.get(\"/api/products/\" + categoryId);\r\n    dispatch({ type: CATEGORY_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: CATEGORY_DETAILS_FAIL, payload: error.message });\r\n\r\n  }\r\n}\r\n\r\nconst deleteCategory = (categoryId) => async (dispatch, getState) => {\r\n  try {\r\n    const { userSignin: { userInfo } } = getState();\r\n    dispatch({ type: CATEGORY_DELETE_REQUEST, payload: categoryId });\r\n    const { data } = await axios.delete(\"/api/category/\" + categoryId, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + userInfo.token\r\n      }\r\n    });\r\n    dispatch({ type: CATEGORY_DELETE_SUCCESS, payload: data, success: true });\r\n  } catch (error) {\r\n    dispatch({ type: CATEGORY_DELETE_FAIL, payload: error.message });\r\n\r\n  }\r\n}\r\n\r\nexport { listCategory, detailsCategory, saveCategory, deleteCategory }"]},"metadata":{},"sourceType":"module"}