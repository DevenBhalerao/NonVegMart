{"ast":null,"code":"import { SELLER_PRODUCT_LIST_REQUEST, SELLER_PRODUCT_LIST_SUCCESS, SELLER_PRODUCT_LIST_FAIL, SELLER_PRODUCT_DETAILS_REQUEST, SELLER_PRODUCT_DETAILS_SUCCESS, SELLER_PRODUCT_DETAILS_FAIL, SELLER_PRODUCT_SAVE_REQUEST, SELLER_PRODUCT_SAVE_SUCCESS, SELLER_PRODUCT_SAVE_FAIL, SELLER_PRODUCT_DELETE_SUCCESS, SELLER_PRODUCT_DELETE_FAIL, SELLER_PRODUCT_DELETE_REQUEST } from \"../constants/sellerproductConstant\";\nimport axios from 'axios';\nimport Axios from \"axios\";\n\nconst sellerlistProducts = (category = '', searchKeyword = '', sortOrder = '') => async dispatch => {\n  try {\n    dispatch({\n      type: SELLER_PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products?category=\" + category + \"&searchKeyword=\" + searchKeyword + \"&sortOrder=\" + sortOrder);\n    dispatch({\n      type: SELLER_PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SELLER_PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst sellersaveProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: SELLER_PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n\n    if (!product._id) {\n      const {\n        data\n      } = await Axios.post('/api/products', product, {\n        headers: {\n          'Authorization': 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: SELLER_PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    } else {\n      const {\n        data\n      } = await Axios.put('/api/products/' + product._id, product, {\n        headers: {\n          'Authorization': 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: SELLER_PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: SELLER_PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst sellerdetailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: SELLER_PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products/\" + productId);\n    dispatch({\n      type: SELLER_PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SELLER_PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst sellerdeleteProdcut = productId => async (dispatch, getState) => {\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    dispatch({\n      type: SELLER_PRODUCT_DELETE_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.delete(\"/api/products/\" + productId, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: SELLER_PRODUCT_DELETE_SUCCESS,\n      payload: data,\n      success: true\n    });\n  } catch (error) {\n    dispatch({\n      type: SELLER_PRODUCT_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { sellerlistProducts, sellerdetailsProduct, sellersaveProduct, sellerdeleteProdcut };","map":{"version":3,"sources":["E:/NVM/NonVegMart/frontend/src/actions/sellerProductActions.js"],"names":["SELLER_PRODUCT_LIST_REQUEST","SELLER_PRODUCT_LIST_SUCCESS","SELLER_PRODUCT_LIST_FAIL","SELLER_PRODUCT_DETAILS_REQUEST","SELLER_PRODUCT_DETAILS_SUCCESS","SELLER_PRODUCT_DETAILS_FAIL","SELLER_PRODUCT_SAVE_REQUEST","SELLER_PRODUCT_SAVE_SUCCESS","SELLER_PRODUCT_SAVE_FAIL","SELLER_PRODUCT_DELETE_SUCCESS","SELLER_PRODUCT_DELETE_FAIL","SELLER_PRODUCT_DELETE_REQUEST","axios","Axios","sellerlistProducts","category","searchKeyword","sortOrder","dispatch","type","data","get","payload","error","message","sellersaveProduct","product","getState","userSignin","userInfo","_id","post","headers","token","put","sellerdetailsProduct","productId","sellerdeleteProdcut","delete","Authorization","success"],"mappings":"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","sourcesContent":["import {\r\n  SELLER_PRODUCT_LIST_REQUEST,\r\n  SELLER_PRODUCT_LIST_SUCCESS,\r\n  SELLER_PRODUCT_LIST_FAIL,\r\n  SELLER_PRODUCT_DETAILS_REQUEST,\r\n  SELLER_PRODUCT_DETAILS_SUCCESS,\r\n  SELLER_PRODUCT_DETAILS_FAIL,\r\n  SELLER_PRODUCT_SAVE_REQUEST,\r\n  SELLER_PRODUCT_SAVE_SUCCESS,\r\n  SELLER_PRODUCT_SAVE_FAIL,\r\n  SELLER_PRODUCT_DELETE_SUCCESS,\r\n  SELLER_PRODUCT_DELETE_FAIL,\r\n  SELLER_PRODUCT_DELETE_REQUEST\r\n} from \"../constants/sellerproductConstant\"\r\nimport axios from 'axios';\r\nimport Axios from \"axios\";\r\n\r\nconst sellerlistProducts = (category = '', searchKeyword = '', sortOrder = '') => async (dispatch) => {\r\n  try {\r\n\r\n    dispatch({\r\n      type: SELLER_PRODUCT_LIST_REQUEST\r\n    });\r\n    const {\r\n      data\r\n    } = await axios.get(\"/api/products?category=\" + category +\r\n      \"&searchKeyword=\" + searchKeyword + \"&sortOrder=\" + sortOrder);\r\n    dispatch({\r\n      type: SELLER_PRODUCT_LIST_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n\r\n    dispatch({\r\n      type: SELLER_PRODUCT_LIST_FAIL,\r\n      payload: error.message\r\n    });\r\n  }\r\n}\r\n\r\nconst sellersaveProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: SELLER_PRODUCT_SAVE_REQUEST,\r\n      payload: product\r\n    });\r\n    const {\r\n      userSignin: {\r\n        userInfo\r\n      }\r\n    } = getState();\r\n    if (!product._id) {\r\n      const {\r\n        data\r\n      } = await Axios.post('/api/products', product, {\r\n        headers: {\r\n          'Authorization': 'Bearer ' + userInfo.token\r\n        }\r\n      });\r\n      dispatch({\r\n        type: SELLER_PRODUCT_SAVE_SUCCESS,\r\n        payload: data\r\n      });\r\n    } else {\r\n      const {\r\n        data\r\n      } = await Axios.put('/api/products/' + product._id, product, {\r\n        headers: {\r\n          'Authorization': 'Bearer ' + userInfo.token\r\n        }\r\n      });\r\n      dispatch({\r\n        type: SELLER_PRODUCT_SAVE_SUCCESS,\r\n        payload: data\r\n      });\r\n    }\r\n\r\n  } catch (error) {\r\n\r\n    dispatch({\r\n      type: SELLER_PRODUCT_SAVE_FAIL,\r\n      payload: error.message\r\n    });\r\n  }\r\n}\r\n\r\nconst sellerdetailsProduct = (productId) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: SELLER_PRODUCT_DETAILS_REQUEST,\r\n      payload: productId\r\n    });\r\n    const {\r\n      data\r\n    } = await axios.get(\"/api/products/\" + productId);\r\n    dispatch({\r\n      type: SELLER_PRODUCT_DETAILS_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: SELLER_PRODUCT_DETAILS_FAIL,\r\n      payload: error.message\r\n    });\r\n\r\n  }\r\n}\r\n\r\nconst sellerdeleteProdcut = (productId) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      userSignin: {\r\n        userInfo\r\n      }\r\n    } = getState();\r\n    dispatch({\r\n      type: SELLER_PRODUCT_DELETE_REQUEST,\r\n      payload: productId\r\n    });\r\n    const {\r\n      data\r\n    } = await axios.delete(\"/api/products/\" + productId, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + userInfo.token\r\n      }\r\n    });\r\n    dispatch({\r\n      type: SELLER_PRODUCT_DELETE_SUCCESS,\r\n      payload: data,\r\n      success: true\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: SELLER_PRODUCT_DELETE_FAIL,\r\n      payload: error.message\r\n    });\r\n\r\n  }\r\n}\r\n\r\nexport {\r\n  sellerlistProducts,\r\n  sellerdetailsProduct,\r\n  sellersaveProduct,\r\n  sellerdeleteProdcut\r\n}"]},"metadata":{},"sourceType":"module"}