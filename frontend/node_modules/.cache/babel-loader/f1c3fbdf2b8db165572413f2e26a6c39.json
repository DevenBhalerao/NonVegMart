{"ast":null,"code":"var _jsxFileName = \"C:\\\\nonvegmart\\\\frontend\\\\src\\\\screens\\\\UploadCategoryScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { saveCategory, listCategory, deleteCategory } from '../actions/categoryActions';\n\nfunction CategoryScreen(props) {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [id, setId] = useState('');\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const categorySave = useSelector(state => state.categorySave);\n  const {\n    loading: loadingSave,\n    success: successSave,\n    error: errorSave\n  } = categorySave;\n  const categoryDelete = useSelector(state => state.categoryDelete);\n  const {\n    loading: loadingDelete,\n    success: successDelete,\n    error: errorDelete\n  } = categoryDelete;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (successSave) {\n      setModalVisible(false);\n    }\n\n    dispatch(listCategory());\n    return () => {//\n    };\n  }, [successSave, successDelete]);\n\n  const openModal = category => {\n    setModalVisible(true);\n    setId(category._id);\n    setName(category.name);\n    setDescription(category.description);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(saveCategory({\n      _id: id,\n      name,\n      description\n    }));\n  };\n\n  const deleteHandler = category => {\n    dispatch(deleteCategory(category._id));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content content-margined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button primary\",\n    onClick: () => openModal({}),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Create Category\")), modalVisible && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, \"Create Category\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, loadingSave && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 31\n    }\n  }, \"Loading...\"), errorSave && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }\n  }, errorSave)), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: name,\n    id: \"name\",\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"description\",\n    value: description,\n    id: \"description\",\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"button primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, id ? \"Update\" : \"Create\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setModalVisible(false),\n    className: \"button secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, \"Back\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"category-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, category.map(category => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: category._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, category._id), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, category.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      onClick: () => openModal(category),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, \"Edit\"), ' ', /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      onClick: () => deleteHandler(category),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, \"Delete\")));\n  })))));\n}\n\nexport default CategoryScreen;","map":{"version":3,"sources":["C:/nonvegmart/frontend/src/screens/UploadCategoryScreen.js"],"names":["React","useEffect","useState","useSelector","useDispatch","saveCategory","listCategory","deleteCategory","CategoryScreen","props","modalVisible","setModalVisible","id","setId","name","setName","description","setDescription","categorySave","state","loading","loadingSave","success","successSave","error","errorSave","categoryDelete","loadingDelete","successDelete","errorDelete","dispatch","openModal","category","_id","submitHandler","e","preventDefault","deleteHandler","target","value","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { saveCategory, listCategory, deleteCategory } from '../actions/categoryActions';\r\n\r\nfunction CategoryScreen(props) {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [id, setId] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n \r\n  const categorySave = useSelector(state => state.categorySave);\r\n  const { loading: loadingSave, success: successSave, error: errorSave } = categorySave;\r\n\r\n  const categoryDelete = useSelector(state => state.categoryDelete);\r\n  const { loading: loadingDelete, success: successDelete, error: errorDelete } = categoryDelete;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (successSave) {\r\n      setModalVisible(false);\r\n    }\r\n    dispatch(listCategory());\r\n    return () => {\r\n      //\r\n    };\r\n  }, [successSave, successDelete]);\r\n\r\n  const openModal = (category) => {\r\n    setModalVisible(true);\r\n    setId(category._id);\r\n    setName(category.name);\r\n    setDescription(category.description);\r\n  \r\n  }\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveCategory({\r\n      _id: id,\r\n      name,description\r\n    }));\r\n  }\r\n  const deleteHandler = (category) => {\r\n    dispatch(deleteCategory(category._id));\r\n  }\r\n  return <div className=\"content content-margined\">\r\n\r\n    <div className=\"product-header\">\r\n      <h3>Category</h3>\r\n      <button className=\"button primary\" onClick={() => openModal({})}>Create Category</button>\r\n    </div>\r\n    {modalVisible &&\r\n      <div className=\"form\">\r\n        <form onSubmit={submitHandler} >\r\n          <ul className=\"form-container\">\r\n            <li>\r\n              <h2>Create Category</h2>\r\n            </li>\r\n            <li>\r\n              {loadingSave && <div>Loading...</div>}\r\n              {errorSave && <div>{errorSave}</div>}\r\n            </li>\r\n\r\n            <li>\r\n              <label htmlFor=\"name\">\r\n                Name\r\n          </label>\r\n              <input type=\"text\" name=\"name\" value={name} id=\"name\" onChange={(e) => setName(e.target.value)}>\r\n              </input>\r\n            </li>\r\n            \r\n           \r\n            <li>\r\n              <label htmlFor=\"description\">\r\n                Description\r\n          </label>\r\n              <textarea name=\"description\" value={description} id=\"description\" onChange={(e) => setDescription(e.target.value)}></textarea>\r\n            </li>\r\n            <li>\r\n              <button type=\"submit\" className=\"button primary\">{id ? \"Update\" : \"Create\"}</button>\r\n            </li>\r\n            <li>\r\n              <button type=\"button\" onClick={() => setModalVisible(false)} className=\"button secondary\">Back</button>\r\n            </li>\r\n          </ul>\r\n        </form>\r\n      </div>\r\n    }\r\n\r\n\r\n    <div className=\"category-list\">\r\n\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Name</th>\r\n            \r\n            <th>Category</th>\r\n            \r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {category.map(category => {\r\n            return (<tr key={category._id}>\r\n              <td>{category._id}</td>\r\n              <td>{category.name}</td>\r\n              <td>\r\n                <button className=\"button\" onClick={() => openModal(category)}>Edit</button>\r\n                {' '}\r\n                <button className=\"button\" onClick={() => deleteHandler(category)}>Delete</button>\r\n              </td>\r\n            </tr>);\r\n          })}\r\n        </tbody>\r\n      </table>\r\n\r\n    </div>\r\n  </div>\r\n}\r\nexport default CategoryScreen;"]},"metadata":{},"sourceType":"module"}